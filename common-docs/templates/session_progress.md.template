# プロジェクト進捗管理

このファイルは、Claude Code での開発セッション間でのコンテキスト保持と進捗管理を目的としています。

## プロジェクト基本情報

- **プロジェクト名**: [プロジェクト名]
- **開始日**: YYYY-MM-DD
- **最新更新**: YYYY-MM-DD
- **現在のフェーズ**: [Phase 1: 基盤構築 / Phase 2: 主要機能 / Phase 3: UI改善 / Phase 4: 最適化]

## 現在の状況

### 最新セッション概要
- **セッション日時**: YYYY-MM-DD HH:MM
- **主要作業**: [前回のセッションで実施した主要作業]
- **完了項目**: [完了した機能・タスク]
- **次回作業予定**: [次に取り組む予定の内容]

### アクティブな開発エリア
- [ ] 認証システム
- [ ] API設計・実装
- [ ] フロントエンド基盤
- [ ] データベース設計
- [ ] [プロジェクト固有の主要エリア]

## 主要コンポーネント進捗

### 1. 認証・認可システム
- **状況**: [未開始 / 設計中 / 実装中 / 完了 / 保留]
- **完了項目**:
  - [ ] ユーザー登録機能
  - [ ] ログイン・ログアウト
  - [ ] セッション管理
  - [ ] パスワードリセット
  - [ ] OAuth連携（必要に応じて）
- **現在の課題**: [課題があれば記述]
- **次回作業**: [次に実装予定の内容]

### 2. API設計・実装
- **状況**: [未開始 / 設計中 / 実装中 / 完了 / 保留]
- **完了項目**:
  - [ ] プロトコル定義（share/protocol/）
  - [ ] パブリックAPI（/pub/*）
  - [ ] セキュアAPI（/sec/*）
  - [ ] 外部API（/api/*）
  - [ ] エラーハンドリング
- **現在の課題**: [課題があれば記述]
- **次回作業**: [次に実装予定の内容]

### 3. データベース設計
- **状況**: [未開始 / 設計中 / 実装中 / 完了 / 保留]
- **完了項目**:
  - [ ] Mongooseモデル定義
  - [ ] インデックス設計
  - [ ] データマイグレーション
  - [ ] バックアップ戦略
- **現在の課題**: [課題があれば記述]
- **次回作業**: [次に実装予定の内容]

### 4. フロントエンド
- **状況**: [未開始 / 設計中 / 実装中 / 完了 / 保留]
- **完了項目**:
  - [ ] プロジェクト基盤設定
  - [ ] ルーティング設定
  - [ ] 状態管理設定
  - [ ] 認証フロー実装
  - [ ] 主要ページ実装
- **現在の課題**: [課題があれば記述]
- **次回作業**: [次に実装予定の内容]

### 5. [プロジェクト固有コンポーネント]
- **状況**: [未開始 / 設計中 / 実装中 / 完了 / 保留]
- **完了項目**:
  - [ ] [具体的な機能・タスク]
- **現在の課題**: [課題があれば記述]
- **次回作業**: [次に実装予定の内容]

## 技術的決定事項

### 採用技術・ライブラリ
| カテゴリ | 技術・ライブラリ | 採用理由 | 決定日 |
|---------|-----------------|----------|--------|
| フロントエンド | React + TypeScript | [理由] | YYYY-MM-DD |
| 状態管理 | [ライブラリ名] | [理由] | YYYY-MM-DD |
| UI | [ライブラリ名] | [理由] | YYYY-MM-DD |
| バックエンド | Node.js + Express | [理由] | YYYY-MM-DD |
| データベース | MongoDB + Mongoose | [理由] | YYYY-MM-DD |
| 認証 | [方式・ライブラリ] | [理由] | YYYY-MM-DD |

### アーキテクチャ決定
- **API設計**: 3層構造（/pub/*, /sec/*, /api/*）採用
- **型安全性**: Zodスキーマによる厳密な型検証
- **パス構成**: TypeScriptパスエイリアス使用
- **[その他の重要な設計決定]**: [内容と理由]

## 既知の課題・制約

### 技術的課題
- **課題1**: [課題の内容]
  - **影響**: [影響範囲]
  - **対応方針**: [解決方針]
  - **優先度**: [高/中/低]

- **課題2**: [課題の内容]
  - **影響**: [影響範囲]  
  - **対応方針**: [解決方針]
  - **優先度**: [高/中/低]

### 外部制約
- **制約1**: [制約の内容と影響]
- **制約2**: [制約の内容と影響]

## 開発メトリクス

### コード品質
- **テストカバレッジ**: [%]（目標: [%]）
- **型安全性**: [TypeScript strict mode有効/無効]
- **リンターエラー**: [件数]

### 機能進捗
- **完了機能**: [数] / [総数]
- **API エンドポイント**: [実装済み数] / [計画数]
- **画面・コンポーネント**: [実装済み数] / [計画数]

## 次回セッション準備

### 優先実装項目
1. [最高優先度の項目]
2. [2番目の優先度の項目]
3. [3番目の優先度の項目]

### 事前確認事項
- [ ] 前回の変更内容の動作確認
- [ ] 関連ドキュメントの更新
- [ ] テストの実行・修正
- [ ] [その他の確認事項]

### セッション開始時チェックリスト
- [ ] session-continuity.md の確認
- [ ] user-requests.md の新規指示確認
- [ ] sessions/active/ の進行中セッション確認
- [ ] 関連する decisions/ や issues/ の確認
- [ ] 開発環境の起動・動作確認

---

**更新ルール**:
- セッション終了時に必ず更新
- 重要な決定事項は即座に記録
- 週次でレビュー・整理実施